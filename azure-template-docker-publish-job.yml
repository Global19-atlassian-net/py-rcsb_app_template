# File: azure-template-docker-job.yml
# Date: 22-Aug-2020 jdw Preliminary version
#
# Updates:
#
##
parameters:
  os: ""
  docker_task: ""

jobs:
- job: ${{ format('build_docker_{0}_{1}', parameters.docker_task, parameters.os) }}
  timeoutInMinutes: 0
  pool:
    ${{ if eq(parameters.os, 'linux') }}:
      vmImage: 'ubuntu-18.04'

  dependsOn:
  - ${{ format('build_docker_{0}_{1}', parameters.docker_task, parameters.os) }}
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

  variables:
  - template: azure-template-variables.yml

  steps:
  - bash: echo "variables - py_module ${{variables.py_module}} image_name ${{variables.image_name}} registry_user ${{variables.registry_user}} "
  - bash: echo "parameters - docker_task ${{parameters.docker_task}} os ${{parameters.os}}"
  #
  - checkout: self
    submodules: true
  #
  - task: DockerInstaller@0
    displayName: "Docker Installer"
    inputs:
        #dockerVersion: 17.09.0-ce
        dockerVersion: 19.03.9
        releaseType: stable
  #
  - task: Docker@2
    displayName: "Login to DockerHub"
    inputs:
        command: login
        containerRegistry: dockerhubtest
  #
  - bash: echo "DONE with LOGIN"
  #
  - ${{ if startsWith(parameters.docker_task, 'build_and_publish') }}:
    - bash: |
        set -e
        pwd
        REGISTRY_USER=${{ variables.registry_user }}
        #
        IMAGE_NAME=${IMAGE_NAME:-"${{ variables.image_name }}"}
        TAG_TEST=${TAG_TEST:-"unittest"}
        TAG_BASE=${TAG_BASE:-"test"}
        PY_MODULE=${PY_MODULE:-"${{ variables.py_module }}"}
        #
        VER=`grep '__version__' rcsb/app/${PY_MODULE}/__init__.py | awk '{print $3}' | tr -d '"'`
        #
      displayName: "Production build script"